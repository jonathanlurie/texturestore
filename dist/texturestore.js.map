{"version":3,"file":"texturestore.js","sources":["../src/Chunk.js","../src/Tools.js","../src/ChunkCollection.js","../src/index.js"],"sourcesContent":["\n/**\n * Holds an object of type THREE.DataTexture3D as data\n */\nclass Chunk {\n  constructor(id, t) {\n    this._id = id\n    this._texture3D = t\n    this._metadata = {}\n    this._timestampCreated = Date.now()\n    this._timestampLastUse = 0\n  }\n\n\n  getId() {\n    return this._id\n  }\n\n\n  getTexture3D() {\n    this._timestampLastUse = Date.now()\n    return this._texture3D\n  }\n\n\n  getByteSize() {\n    return this._texture3D.image.data.byteLength\n  }\n\n\n  getTimestampLastUse() {\n    return this._timestampLastUse\n  }\n\n\n  addMetadata(k, v) {\n    this._metadata[k] = v\n  }\n\n\n  getMetadata(key=null) {\n    if(!key){\n      return this._metadata\n    }\n\n    if(key in this._metadata){\n      return this._metadata[key]\n    }\n\n    return null\n  }\n\n\n}\n\n\nexport default Chunk\n","/**\n * Handy function to deal with option object we pass in argument of function.\n * Allows the return of a default value if the `optionName` is not available in\n * the `optionObj`\n * @param {Object} optionObj - the object that contain the options\n * @param {String} optionName - the name of the option desired, attribute of `optionObj`\n * @param {any} optionDefaultValue - default values to be returned in case `optionName` is not an attribute of `optionObj`\n */\nexport function getOption(optionObj, optionName, optionDefaultValue) {\n  return (optionObj && optionName in optionObj) ? optionObj[optionName] : optionDefaultValue\n}\n","import Chunk from './Chunk'\nimport { getOption } from './Tools'\n\nclass ChunkCollection {\n\n  /**\n   * @param {Object} options - the option object\n   * @param {number} options.maxSizeMegaByte - Maximum size of the whole colelction in MB (default: 500)\n   * @param {number} options.cleaningThreshold - When the max is reached, the cleaning is done until the total size is just under `maxSizeMegaByte * cleaningThreshold` (default: 0.8)\n   */\n  constructor(options={}) {\n    this._collection = {}\n    this._maxByteSize = getOption(options, 'maxSizeMegaByte', 500) * 1024 * 1024\n    this._thresholdByteSize = this._maxByteSize * getOption(options, 'cleaningThreshold', 0.8)\n    this._totalByteSize = 0\n  }\n\n  getTotalByteSize(force=false) {\n    if(force) {\n      this._computeByteSize()\n    }\n\n    return this._totalByteSize\n  }\n\n  createChunk(id, texture3D) {\n    let t = new Chunk(id, texture3D)\n    this._collection[id] = t\n    this._totalByteSize += texture3D.image.data.byteLength\n\n    if(this._totalByteSize > this._maxByteSize) {\n      this._clean()\n    }\n\n    console.log(~~(this._totalByteSize / 1024**2) + ' MB')\n\n    return t\n  }\n\n\n  deleteChunk(id) {\n    if(id in this._collection) {\n      this._totalByteSize -= this._collection[id].getByteSize()\n      delete this._collection[id]\n    }\n  }\n\n\n  getChunk(id) {\n    if(id in this._collection) {\n      return this._collection[id]\n    } else {\n      return null\n    }\n  }\n\n\n  _getAllTimestampLastUse() {\n    let that = this\n    // return Object.keys(this._collection)\n    // .map(function (k) {\n    //   return {\n    //     id: k,\n    //     timestampLastUse: that._collection[k].getTimestampLastUse()\n    //   }\n    // })\n    // .sort((a, b) => a.timestampLastUse - a.timestampLastUse)\n\n    let ids = Object.keys(this._collection)\n    let idTs = new Array(ids.length)\n    for(let i=0; i<idTs.length; i++){\n      let id = ids[i]\n      idTs[i] = {\n        id: id,\n        timestampLastUse: this._collection[id].getTimestampLastUse()\n      }\n    }\n\n    idTs.sort((a, b) => a.timestampLastUse - a.timestampLastUse)\n    return idTs\n  }\n\n\n  _clean() {\n    console.time('_getAllTimestampLastUse')\n    let idTs = this._getAllTimestampLastUse()\n    console.timeEnd('_getAllTimestampLastUse')\n\n    for(let i=0; i<idTs.length; i++) {\n      let id = idTs[i].id\n      let chunk = this._collection[id]\n      let byteSize = chunk.getByteSize()\n      delete this._collection[id]\n      this._totalByteSize -= byteSize\n\n      if(this._totalByteSize <= this._thresholdByteSize){\n        break\n      }\n    }\n  }\n\n\n  _computeByteSize() {\n    let that = this\n    let ids = Object.keys(this._collection)\n    let byteSize = 0\n    for(let i=0; i<ids.length; i++) {\n      byteSize += this._collection[ids[i]].getByteSize()\n    }\n\n    this._totalByteSize = byteSize\n  }\n\n}\n\n\nexport default ChunkCollection\n","import ChunkCollection from './ChunkCollection'\n\nexport default ({\n  ChunkCollection, \n})\n"],"names":[],"mappings":"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"}